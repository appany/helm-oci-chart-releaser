name: Helm OCI Chart Releaser
description: Push Helm charts to OCI-based (Docker) registries
author: sergeyshaykhullin
branding:
  color: yellow
  icon: upload-cloud
inputs:
  name:
    required: true
    description: Chart name
  repository:
    required: true
    description: Chart repository name
  tag:
    required: true
    description: Chart version
  app_version:
    required: false
    description: Set appVersion in the Chart
  path:
    required: false
    description: Chart path (Default 'charts/{name}')
  registry:
    required: true
    description: OCI registry
  registry_username:
    required: true
    description: OCI registry username
  registry_password:
    required: true
    description: OCI registry password
  sign:
    required: false
    default: 'false'
    description: Use a PGP private key to sign this package
  signing_key:
    required: false
    default: ''
    description: Name of the key to use when signing. Required if "sign" is true
  signing_passphrase:
    required: false
    default: ''
    description: Passphrase for the signing key
  signing_keyring:
    required: false
    default: ~/.gnupg/secring.gpg
    description: Location of the public keyring
  update_dependencies:
    required: false
    default: 'false'
    description: Update chart dependencies before packaging (Default 'false')
outputs:
  image:
    value: ${{ steps.output.outputs.image }}
    description: Chart image (Default '{registry}/{repository}/{image}:{tag}')
runs:
  using: composite
  steps:
    - name: Helm | Login
      shell: bash
      run: echo '${{ inputs.registry_password }}' | helm registry login -u '${{ inputs.registry_username }}' --password-stdin '${{ inputs.registry }}'
      env:
        HELM_EXPERIMENTAL_OCI: '1'

    - id: prepare-variables
      shell: bash
      run: |
        echo "path=${{ inputs.path == null && format('{0}/{1}', 'charts', inputs.name) || inputs.path }}" >> $GITHUB_OUTPUT
        echo "chart-file=${{ runner.temp }}/${{ inputs.name }}-${{ inputs.tag }}.tgz" >> $GITHUB_OUTPUT

    - name: Helm | Dependency
      if: ${{ inputs.update_dependencies == 'true' }}
      shell: bash
      run: helm dependency update ${{ steps.prepare-variables.outputs.path }}
      env:
        HELM_EXPERIMENTAL_OCI: '1'

    - name: Helm | Package
      shell: bash
      run: |
        ${{ inputs.sign == 'true' && inputs.signing_passphrase && format('echo ''{0}'' | ', inputs.signing_passphrase) || '' }} \
        helm package \
          '${{ steps.prepare-variables.outputs.path }}' \
          --version '${{ inputs.tag }}' \
          ${{ inputs.app_version != null && format('--app-version {0}', inputs.app_version) || '' }} \
          --destination $(dirname '${{ steps.prepare-variables.outputs.chart-file }}') \
          ${{ inputs.sign == 'true' && format('--sign --key ''{0}'' --keyring {1} --passphrase-file -', inputs.signing_key, inputs.signing_keyring) || '' }}
      env:
        HELM_EXPERIMENTAL_OCI: '1'

    - name: Helm | Push
      shell: bash
      run: |
        if [ ! -f '${{ steps.prepare-variables.outputs.chart-file }}' ]; then
          echo "Chart file '${{ steps.prepare-variables.outputs.chart-file }}' does not exist. Please check the 'name' input matches the chart name."
          exit 1
        fi

        helm push '${{ steps.prepare-variables.outputs.chart-file }}' 'oci://${{ inputs.registry }}/${{ inputs.repository }}'
      env:
        HELM_EXPERIMENTAL_OCI: '1'

    - name: Helm | Logout
      shell: bash
      run: helm registry logout '${{ inputs.registry }}'
      env:
        HELM_EXPERIMENTAL_OCI: '1'

    - name: Helm | Output
      id: output
      shell: bash
      run: echo 'image=${{ inputs.registry }}/${{ inputs.repository }}/${{ inputs.name }}:${{ inputs.tag }}' >> $GITHUB_OUTPUT
